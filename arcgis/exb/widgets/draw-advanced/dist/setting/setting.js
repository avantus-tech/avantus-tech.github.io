System.register(["jimu-core","jimu-ui/advanced/setting-components","jimu-ui"],(function(e,t){var a={},n={},i={};return{setters:[function(e){a.React=e.React,a.defaultMessages=e.defaultMessages},function(e){n.MapWidgetSelector=e.MapWidgetSelector,n.SettingRow=e.SettingRow,n.SettingSection=e.SettingSection,n.SidePopper=e.SidePopper},function(e){i.Alert=e.Alert,i.Button=e.Button,i.Checkbox=e.Checkbox,i.CollapsablePanel=e.CollapsablePanel,i.Label=e.Label,i.NumericInput=e.NumericInput,i.Option=e.Option,i.Select=e.Select,i.TextInput=e.TextInput,i.defaultMessages=e.defaultMessages}],execute:function(){e((()=>{var e={9244:e=>{"use strict";e.exports=a},4321:e=>{"use strict";e.exports=i},9298:e=>{"use strict";e.exports=n}},t={};function l(a){var n=t[a];if(void 0!==n)return n.exports;var i=t[a]={exports:{}};return e[a](i,i.exports,l),i.exports}l.d=(e,t)=>{for(var a in t)l.o(t,a)&&!l.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.p="";var s={};return l.p=window.jimuConfig.baseUrl,(()=>{"use strict";l.r(s),l.d(s,{__set_webpack_public_path__:()=>h,default:()=>p});var e,t=l(9244);!function(e){e.SINGLE="single",e.CONTINUOUS="continuous",e.UPDATE="update"}(e||(e={}));const a={selectMapWidget:"Select a Map widget",sourceLabel:"Source Label",selectDrawMode:"Select Draw Mode",drawModeSingle:"Single",drawModeContinuous:"Continuous",drawModeUpdate:"Update"};var n=l(9298),i=l(4321);const{useState:r,useEffect:o}=t.React,c=e=>{const a=e.allUnits,n=e.type,l=e.oldUnit,[s,c]=r((null==l?void 0:l.unit)||""),[u,d]=r((null==l?void 0:l.label)||""),[p,h]=r((null==l?void 0:l.abbreviation)||""),[g,m]=r((null==l?void 0:l.conversion)||1),[f,v]=r(!1),[b,S]=r("");return o((()=>{let e=!0,t="";const n=/^[a-zA-Z]+$/.test(s);""!==s&&""!==u&&""!==p||(e=!1,t="Required Field Missing"),g||(e=!1,t="Invalid Conversion Factor"),n||(e=!1,t="Name May Only Contain Letters");for(let n=0;n<a.length;n++)if(s===a[n].unit){if(l&&l.unit===s)continue;e=!1,t="Name Must Be Unique"}v(e),S(t)}),[s,u,p,g]),t.React.createElement(i.CollapsablePanel,{defaultIsOpen:!l,label:l?`Edit/Delete - ${u}`:"Create New Unit",type:l?"primary":"default",className:"mb-2"},t.React.createElement(i.Label,{className:"w-100"},e.handleChangeUnit?"Name (Cannot be changed):":"Name (Must be unique, letters only):",t.React.createElement(i.TextInput,{allowClear:!e.handleChangeUnit,required:!0,type:"text",onChange:e=>c(e.target.value),defaultValue:s,readOnly:e.handleChangeUnit})),t.React.createElement(i.Label,{className:"w-100"},"Label (Full name used in menus):",t.React.createElement(i.TextInput,{allowClear:!0,required:!0,type:"text",onChange:e=>d(e.target.value),defaultValue:u})),t.React.createElement(i.Label,{className:"w-100"},"Abbreviation (Used on map):",t.React.createElement(i.TextInput,{allowClear:!0,required:!0,type:"text",onChange:e=>h(e.target.value),defaultValue:p})),t.React.createElement(i.Label,{className:"w-100"},"linear"===n?"Conversion Factor (One meter is how many of your unit?):":"Conversion Factor (One square meter is how many of your unit?):",t.React.createElement(i.NumericInput,{className:"w-100",required:!0,defaultValue:g,onChange:e=>m(e)})),f?t.React.createElement("div",null,t.React.createElement("h6",null,"linear"===n?`1 meter = ${g} ${u} (${p})`:`1 square meter = ${g} ${u} (${p})`),t.React.createElement(i.Button,{block:!0,onClick:()=>e.handleAddUnit?e.handleAddUnit({unit:s,label:u,abbreviation:p,conversion:g},n):e.handleChangeUnit({unit:s,label:u,abbreviation:p,conversion:g},n)},"Save Unit")):t.React.createElement("h6",null,b),e.handleDeleteUnit?t.React.createElement(i.Button,{block:!0,type:"danger",onClick:()=>e.handleDeleteUnit(s,n)},"Delete Unit"):t.React.createElement(t.React.Fragment,null))},u=[{unit:"kilometers",label:"Kilometers",abbreviation:"km",conversion:.001},{unit:"miles",label:"Miles",abbreviation:"mi",conversion:621371e-9},{unit:"meters",label:"Meters",abbreviation:"m",conversion:1},{unit:"nautical-miles",label:"Nautical Miles",abbreviation:"NM",conversion:539957e-9},{unit:"feet",label:"Feet",abbreviation:"ft",conversion:3.28084},{unit:"yards",label:"Yards",abbreviation:"yd",conversion:1.09361}],d=[{unit:"square-kilometers",label:"Square Kilometers",abbreviation:"km\ufffd",conversion:1e-6},{unit:"square-miles",label:"Square Miles",abbreviation:"mi\ufffd",conversion:3.86102e-7},{unit:"acres",label:"Acres",abbreviation:"ac",conversion:247105e-9},{unit:"hectares",label:"Hectares",abbreviation:"ha",conversion:1e-4},{unit:"square-meters",label:"Square Meters",abbreviation:"m\ufffd",conversion:1},{unit:"square-feet",label:"Square Feet",abbreviation:"ft\ufffd",conversion:10.7639},{unit:"square-yards",label:"Square Yards",abbreviation:"yd\ufffd",conversion:1.19599}];class p extends t.React.PureComponent{constructor(e){var n,l,s,r;super(e),this.onPropertyChange=(e,t)=>{const{config:a}=this.props;if(t===a[e])return;const n=a.set(e,t),i={id:this.props.id,config:n};this.props.onSettingChange(i)},this.onMapWidgetSelected=e=>{this.props.onSettingChange({id:this.props.id,useMapWidgetIds:e})},this.handleDrawModeChange=e=>{var t;const a=null===(t=null==e?void 0:e.target)||void 0===t?void 0:t.value;this.onPropertyChange("creationMode",a)},this.handleTurnOff=()=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("turnOffOnClose",!this.props.config.turnOffOnClose)})},this.handleChangeTitle=()=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("changeTitle",!this.props.config.changeTitle)})},this.handleChangeListMode=()=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("changeListMode",!this.props.config.changeListMode)})},this.handleListMode=()=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("listMode",!this.props.config.listMode)})},this.handleTitle=e=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("title",e)})},this.handleDefaultDistance=e=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("defaultDistance",e)}),this.setState({defaultDistanceUnit:e})},this.handleDefaultArea=e=>{this.props.onSettingChange({id:this.props.id,config:this.props.config.set("defaultArea",e)}),this.setState({defaultAreaUnit:e})},this.handleAddUnit=(e,t)=>{var a,n,i,l;if("linear"===t){const t=[...(null===(n=null===(a=this.props.config.userDistances)||void 0===a?void 0:a.asMutable)||void 0===n?void 0:n.call(a))||[],e];this.props.onSettingChange({id:this.props.id,config:this.props.config.set("userDistances",t)}),this.setState({availableDistanceUnits:[...u,...t],defaultDistanceUnit:null})}else{const t=[...(null===(l=null===(i=this.props.config.userAreas)||void 0===i?void 0:i.asMutable)||void 0===l?void 0:l.call(i))||[],e];this.props.onSettingChange({id:this.props.id,config:this.props.config.set("userAreas",t)}),this.setState({availableAreaUnits:[...d,...t],defaultAreaUnit:null})}},this.handleChangeUnit=(e,t)=>{var a,n,i,l;if("linear"===t){const t=[...(null===(n=null===(a=this.props.config.userDistances)||void 0===a?void 0:a.asMutable)||void 0===n?void 0:n.call(a))||[]],i=t.findIndex((t=>t.unit===e.unit));-1!==i&&(t[i]=e),this.props.onSettingChange({id:this.props.id,config:this.props.config.set("userDistances",t)}),this.setState({availableDistanceUnits:[...u,...t],defaultDistanceUnit:null})}else{const t=[...(null===(l=null===(i=this.props.config.userAreas)||void 0===i?void 0:i.asMutable)||void 0===l?void 0:l.call(i))||[]],a=t.findIndex((t=>t.unit===e.unit));-1!==a&&(t[a]=e),this.props.onSettingChange({id:this.props.id,config:this.props.config.set("userAreas",t)}),this.setState({availableAreaUnits:[...d,...t],defaultAreaUnit:null})}},this.handleDeleteUnit=(e,t)=>{var a,n,i,l;if("linear"===t){const t=((null===(n=null===(a=this.props.config.userDistances)||void 0===a?void 0:a.asMutable)||void 0===n?void 0:n.call(a))||[]).filter((t=>t.unit!==e));this.props.onSettingChange({id:this.props.id,config:this.props.config.set("userDistances",t)}),this.setState({availableDistanceUnits:[...u,...t],defaultDistanceUnit:null})}else{const t=((null===(l=null===(i=this.props.config.userAreas)||void 0===i?void 0:i.asMutable)||void 0===l?void 0:l.call(i))||[]).filter((t=>t.unit!==e));this.props.onSettingChange({id:this.props.id,config:this.props.config.set("userAreas",t)}),this.setState({availableAreaUnits:[...d,...t],defaultAreaUnit:null})}},this.formatMessage=(e,n)=>{const l=Object.assign({},a,i.defaultMessages,t.defaultMessages);return this.props.intl.formatMessage({id:e,defaultMessage:l[e]},n)},this.state={linearSidePopper:!1,areaSidePopper:!1,defaultDistanceUnit:this.props.config.defaultDistance,defaultAreaUnit:this.props.config.defaultArea,availableDistanceUnits:[...u,...(null===(l=null===(n=this.props.config.userDistances)||void 0===n?void 0:n.asMutable)||void 0===l?void 0:l.call(n))||this.props.config.userDistances||[]],availableAreaUnits:[...d,...(null===(r=null===(s=this.props.config.userAreas)||void 0===s?void 0:s.asMutable)||void 0===r?void 0:r.call(s))||this.props.config.userAreas||[]]}}render(){var l,s,r,o;const{useMapWidgetIds:u,config:d}=this.props,p=(null===(s=null===(l=d.userDistances)||void 0===l?void 0:l.asMutable)||void 0===s?void 0:s.call(l))||d.userDistances||[],h=(null===(o=null===(r=d.userAreas)||void 0===r?void 0:r.asMutable)||void 0===o?void 0:o.call(r))||d.userAreas||[];return t.React.createElement("div",null,t.React.createElement("div",{className:"widget-setting-psearch"},t.React.createElement(n.SettingSection,{className:"map-selector-section",title:this.props.intl.formatMessage({id:"sourceLabel",defaultMessage:a.sourceLabel})},t.React.createElement(n.SettingRow,{label:this.formatMessage("selectMapWidget")}),t.React.createElement(n.SettingRow,null,t.React.createElement(n.MapWidgetSelector,{onSelect:this.onMapWidgetSelected,useMapWidgetIds:u})),t.React.createElement(n.SettingRow,{label:this.formatMessage("selectDrawMode"),flow:"wrap"},t.React.createElement(i.Select,{value:d.creationMode,onChange:this.handleDrawModeChange,className:"drop-height"},t.React.createElement("option",{value:e.CONTINUOUS},this.formatMessage("drawModeContinuous")),t.React.createElement("option",{value:e.SINGLE},this.formatMessage("drawModeSingle")))),t.React.createElement(n.SettingRow,{label:"Draw Layer Settings",flow:"wrap"},t.React.createElement(i.Label,{className:"w-100 mt-2 mb-2"},"Draw Layer Name:",t.React.createElement(i.TextInput,{type:"text",required:!0,defaultValue:"Drawn Graphics",onChange:e=>this.handleTitle(e.target.value)})),t.React.createElement("div",null,t.React.createElement(i.Checkbox,{checked:this.props.config.changeTitle,onChange:this.handleChangeTitle}),t.React.createElement("span",null,"Allow Users To Change Draw Layer Name")),t.React.createElement("div",null,t.React.createElement(i.Checkbox,{checked:this.props.config.listMode,onChange:this.handleListMode}),t.React.createElement("span",null,"Show In Map Layer List")),t.React.createElement("div",null,t.React.createElement(i.Checkbox,{checked:this.props.config.changeListMode,onChange:this.handleChangeListMode}),t.React.createElement("span",null,"Allow Users To Show/Hide In Map Layer List"))),t.React.createElement(n.SettingRow,{label:"Measurement Settings",flow:"wrap"},t.React.createElement(i.Button,{onClick:()=>this.setState({linearSidePopper:!0})},"Add or Change Linear Units"),t.React.createElement(i.Label,{className:"w-100 mt-2 mb-2"},"Default Linear Unit:",t.React.createElement(i.Select,{title:"Linear Units",onChange:e=>this.handleDefaultDistance(e.target.value),value:this.state.defaultDistanceUnit},this.state.availableDistanceUnits.map(((e,a)=>t.React.createElement(i.Option,{key:a,value:a},e.label+" ("+e.abbreviation+")")))),null!==this.state.defaultDistanceUnit?t.React.createElement(t.React.Fragment,null):t.React.createElement(i.Alert,null,"Reset Default Distance Units")),t.React.createElement(i.Button,{onClick:()=>{this.setState({areaSidePopper:!0})}},"Add or Change Area Units"),t.React.createElement(i.Label,{className:"w-100 mt-2 mb-2"},"Default Area Units:",t.React.createElement(i.Select,{title:"Area Units",onChange:e=>{this.handleDefaultArea(e.target.value)},value:this.state.defaultAreaUnit},this.state.availableAreaUnits.map(((e,a)=>t.React.createElement(i.Option,{key:a,value:a},e.label+" ("+e.abbreviation+")")))),"Note: superscript numbers may not display correctly in this menu, but will work in application.",null!==this.state.defaultAreaUnit?t.React.createElement(t.React.Fragment,null):t.React.createElement(i.Alert,null,"Reset Default Area Units"))),t.React.createElement(n.SettingRow,{label:"Stop Drawing On Close",flow:"wrap"},t.React.createElement("div",null,t.React.createElement(i.Checkbox,{checked:this.props.config.turnOffOnClose,onChange:this.handleTurnOff}),t.React.createElement("span",null,"This widget is in a Widget Controller and I want to stop drawing when I close it."))))),t.React.createElement(n.SidePopper,{position:"right",isOpen:this.state.linearSidePopper,toggle:()=>{this.setState({linearSidePopper:!this.state.linearSidePopper})},title:"Change Linear Units",trigger:t.React.createElement("span",null)},t.React.createElement(i.Alert,null,"The Default Linear Unit must be reset after changes in this panel."),t.React.createElement(c,{allUnits:this.state.availableDistanceUnits,handleAddUnit:this.handleAddUnit,type:"linear"}),p&&p.length>0?t.React.createElement("div",null,t.React.createElement("hr",null),t.React.createElement("h3",null,"Edit Units")):t.React.createElement(t.React.Fragment,null),p&&p.map(((e,a)=>t.React.createElement(c,{key:a,allUnits:this.state.availableDistanceUnits,handleChangeUnit:this.handleChangeUnit,type:"linear",oldUnit:e,handleDeleteUnit:this.handleDeleteUnit})))),t.React.createElement(n.SidePopper,{position:"right",isOpen:this.state.areaSidePopper,toggle:()=>{this.setState({areaSidePopper:!this.state.areaSidePopper})},title:"Change Area Units",trigger:t.React.createElement("span",null)},t.React.createElement(i.Alert,null,"The Default Area Unit must be reset after changes in this panel."),t.React.createElement(c,{allUnits:this.state.availableAreaUnits,handleAddUnit:this.handleAddUnit,type:"area"}),h&&h.length>0?t.React.createElement("div",null,t.React.createElement("hr",null),t.React.createElement("h3",null,"Edit Units")):t.React.createElement(t.React.Fragment,null),h&&h.map(((e,a)=>t.React.createElement(c,{key:a,allUnits:this.state.availableAreaUnits,handleChangeUnit:this.handleChangeUnit,type:"area",oldUnit:e,handleDeleteUnit:this.handleDeleteUnit})))))}}function h(e){l.p=e}})(),s})())}}}));